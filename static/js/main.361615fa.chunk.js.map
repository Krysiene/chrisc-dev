{"version":3,"sources":["App/pages/About/index.tsx","App/pages/Home/index.tsx","App/pages/Employment/EmploymentEntry.tsx","App/pages/Employment/index.tsx","App/components/Header/LinksList.tsx","App/components/Header/index.tsx","App/components/HorizontalBar.tsx","App/index.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","h1","fontSize","fontFamily","fontWeight","marginBottom","body1","About","props","classes","className","ref","aboutRef","Container","style","padding","Typography","variant","Home","homeRef","h2","h3","EmploymentEntry","position","company","description","map","descriptionEntry","defaultProps","Employment","employmentRef","LinksList","Breadcrumbs","aria-label","separator","float","transform","linkRefs","value","Link","color","onClick","linkRef","current","scrollIntoView","behavior","linkName","Header","useState","isSticky","setIsSticky","useEffect","handleScroll","window","pageYOffset","addEventListener","removeEventListener","HorizontalBar","type","direction","background","App","useRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.361615fa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  h1: {\r\n    fontSize: \"2.2rem\",\r\n    fontFamily: \"Segoe UI, Ubuntu, Roboto, Open Sans, Helvetica Neue, sans-serif\",\r\n    fontWeight: \"lighter\",\r\n    marginBottom: 20,\r\n  },\r\n  body1: {\r\n    fontSize: \"1.2rem\",\r\n    fontFamily: \"Segoe UI, Ubuntu, Roboto, Open Sans, Helvetica Neue, sans-serif\",\r\n    fontWeight: \"lighter\",\r\n  },\r\n});\r\n\r\nfunction About(props: { aboutRef: React.RefObject<HTMLDivElement> }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"about\" ref={ props.aboutRef }>\r\n      <Container style={{ padding: \"50px 100px\" }}>\r\n        <Typography className={classes.h1} variant=\"h1\">\r\n          About me\r\n        </Typography>\r\n        <Typography className={classes.body1} variant=\"body1\">\r\n          I am a computer science major at University of California, Santa\r\n          Barbara. Dedicated to a lifetime of learning, I am always open to\r\n          tackle new and exciting problems!\r\n        </Typography>\r\n        <Typography className={classes.body1} variant=\"body1\">\r\n          <br/>Languages<br/>C++, TypeScript/JavaScript, Lua, Java\r\n        </Typography>\r\n        <Typography className={classes.body1} variant=\"body1\">\r\n          <br/>Frameworks and Tools<br/>React, Git, Bash/Shell\r\n        </Typography>\r\n        <Typography className={classes.body1} variant=\"body1\">\r\n          <br/>Operating Systems<br/>Linux (Ubuntu), Windows\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nfunction Home(props: { homeRef: React.RefObject<HTMLDivElement> }) {\r\n  return (\r\n    <div className=\"home\" ref={ props.homeRef }>\r\n      <div className=\"middle-horizontal-container\">\r\n        <h1>Hi, I'm Chris.</h1>\r\n        <h2>A software engineer.</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./EmploymentEntry.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  h2: {\r\n    fontSize: \"1.5rem\",\r\n    fontFamily: \"Segoe UI, Ubuntu, Roboto, Open Sans, Helvetica Neue, sans-serif\",\r\n    fontWeight: \"normal\",\r\n  },\r\n  h3: {\r\n    fontSize: \"1.2rem\",\r\n    fontFamily: \"Segoe UI, Ubuntu, Roboto, Open Sans, Helvetica Neue, sans-serif\",\r\n    fontWeight: \"lighter\",\r\n    marginBottom: 20,\r\n  },\r\n  body1: {\r\n    fontSize: \"1.2rem\",\r\n    fontFamily: \"Segoe UI, Ubuntu, Roboto, Open Sans, Helvetica Neue, sans-serif\",\r\n    fontWeight: \"lighter\",\r\n    marginBottom: 15,\r\n  },\r\n});\r\n\r\ntype defaultProps = {\r\n  position: string,\r\n  company: string,\r\n  description: Array<string>,\r\n}\r\n\r\nfunction EmploymentEntry(props: defaultProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"employment-entry-container\">\r\n      <Typography className={classes.h2}>\r\n        {props.position}\r\n      </Typography>\r\n      <Typography className={classes.h3}>\r\n        {props.company}\r\n      </Typography>\r\n      {props.description.map((descriptionEntry: string) => (\r\n        <Typography className={classes.body1}>\r\n          {descriptionEntry}\r\n        </Typography>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nEmploymentEntry.defaultProps = {\r\n  position: \"\",\r\n  company: \"\",\r\n  description: [],\r\n}\r\n\r\nexport default EmploymentEntry;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EmploymentEntry from \"./EmploymentEntry\";\r\n\r\nconst useStyles = makeStyles({\r\n  h1: {\r\n    fontSize: \"2.2rem\",\r\n    fontFamily: \"Segoe UI, Ubuntu, Roboto, Open Sans, Helvetica Neue, sans-serif\",\r\n    fontWeight: \"lighter\",\r\n    marginBottom: 30,\r\n  },\r\n  body1: {\r\n    fontSize: \"1.2rem\",\r\n    fontFamily: \"Segoe UI, Ubuntu, Roboto, Open Sans, Helvetica Neue, sans-serif\",\r\n    fontWeight: \"lighter\",\r\n  },\r\n});\r\n\r\nfunction Employment(props: { employmentRef: React.RefObject<HTMLDivElement> }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"employment\" ref={ props.employmentRef }>\r\n      <Container style={{ padding: \"50px 100px\" }}>\r\n        <Typography className={classes.h1} variant=\"h1\">\r\n          Employment\r\n        </Typography>\r\n        <EmploymentEntry\r\n          position=\"Software Engineer Intern\"\r\n          company=\"Tech For Good Inc. / June 2021 - Aug 2021\"\r\n          description={[\r\n            \"Implemented reusable React components and a variety of scalable web pages with TypeScript, resulting in a more robust user experience.\",\r\n            \"Implemented unit testing strategy and unit tests with Jest and integrated application testing suite into the teamâ€™s CI pipeline.\",\r\n            \"Spearheaded migration to a trunk-based Git branching strategy, resulting in productivity gains of 50% and enabling continuous code integration and review.\",\r\n          ]}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Employment;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst onClick = (linkRef: React.RefObject<HTMLDivElement>) => () => {\r\n  linkRef.current?.scrollIntoView({behavior: 'smooth'})\r\n}\r\n\r\ntype propTypes = {\r\n  linkRefs: Array<{\r\n    linkName: string;\r\n    linkRef: React.RefObject<HTMLDivElement>;\r\n  }>;\r\n};\r\n\r\nfunction LinksList(props: propTypes) {\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\" separator=\"|\" style={{ float: \"right\", transform: \"translate(0%, 50%)\" }}>\r\n      {props.linkRefs.map(\r\n        (value: {\r\n          linkName: string;\r\n          linkRef: React.RefObject<HTMLDivElement>;\r\n        }) => (\r\n          <Link color=\"inherit\" onClick={ onClick(value.linkRef) }>{ value.linkName }</Link>\r\n        )\r\n      )}\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n\r\nexport default LinksList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport LinksList from \"./LinksList\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\ntype propTypes = {\r\n  linkRefs: Array<{\r\n    linkName: string,\r\n    linkRef: React.RefObject<HTMLDivElement>,\r\n  }>\r\n}\r\n\r\nfunction Header(props: propTypes) {\r\n  const [isSticky, setIsSticky] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => setIsSticky(window.pageYOffset > 50);\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return <div className={isSticky ? \"header-sticky\" : \"header\"}>\r\n    <Container style={{ padding: \"0px 100px\" }}>\r\n      <LinksList linkRefs={ props.linkRefs }/>\r\n    </Container>\r\n  </div>;\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport './HorizontalBar.css';\r\n\r\nconst defaultProps = {\r\n  background: \"white\",\r\n  direction: \"down\",\r\n};\r\n\r\nfunction HorizontalBar(props: typeof defaultProps) {\r\n  const type = props.direction === \"down\" ? \"horizontal-bar-down\" : \"horizontal-bar-up\";\r\n  return <div className={type} style={{background: props.background}}></div>;\r\n}\r\n\r\nHorizontalBar.defaultProps = defaultProps;\r\n\r\nexport default HorizontalBar;\r\n","import React, { useRef } from 'react';\nimport './index.css';\nimport About from './pages/About';\nimport Home from './pages/Home';\nimport Employment from './pages/Employment';\nimport Header from './components/Header';\nimport HorizontalBar from './components/HorizontalBar';\n\nfunction App() {\n  const homeRef = useRef<HTMLDivElement>(null);\n  const aboutRef = useRef<HTMLDivElement>(null);\n  const employmentRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <div>\n      <Header linkRefs={[\n        {\n          linkName: \"Home\",\n          linkRef: homeRef,\n        }, {\n          linkName: \"About\",\n          linkRef: aboutRef,\n        }, {\n          linkName: \"Employment\",\n          linkRef: employmentRef,\n        }\n      ]}/>\n      <Home homeRef={ homeRef }/>\n      <HorizontalBar direction=\"down\" />\n      <About aboutRef={ aboutRef }/>\n      <HorizontalBar direction=\"up\" />\n      <Employment employmentRef={ employmentRef }/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}